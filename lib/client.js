"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
require("juxtapose");
var _easywithstyle = /*#__PURE__*/ _interop_require_default(require("easy-with-style"));
var _sufficient = require("sufficient");
var _easy = require("easy");
var _view = /*#__PURE__*/ _interop_require_default(require("./view"));
var _preloader = /*#__PURE__*/ _interop_require_default(require("./view/div/preloader"));
var _createMethods = /*#__PURE__*/ _interop_require_default(require("./createMethods"));
var _state = require("./state");
var _element = require("./utilities/element");
var _orientation = require("./utilities/orientation");
var _selectors = require("./selectors");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var renderStyles = _easywithstyle.default.renderStyles;
renderStyles();
var viewDOMElement = document.querySelector(_selectors.VIEW_DIV_SELECTOR), scheduler = null, model = null, view = (0, _element.elementFromDOMElement)(viewDOMElement, _view.default); ///
_sufficient.controller.assignMethods(_createMethods.default, scheduler, model, view);
var body = new _easy.Body(), loadingDiv = new _easy.Element(_selectors.LOADING_DIV_SELECTOR);
body.mount(/*#__PURE__*/ React.createElement(_preloader.default, null));
(0, _orientation.onOrientationChange)(function(orientation) {
    (0, _state.setOrientation)(orientation);
    view.updateZoom();
});
(0, _orientation.getOrientation)(function(orientation) {
    (0, _state.setOrientation)(orientation);
    body.mount(view);
    loadingDiv.hide();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBcImp1eHRhcG9zZVwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBjb250cm9sbGVyIH0gZnJvbSBcInN1ZmZpY2llbnRcIjtcbmltcG9ydCB7IEJvZHksIEVsZW1lbnQgfSBmcm9tIFwiZWFzeVwiO1xuXG5pbXBvcnQgVmlldyBmcm9tIFwiLi92aWV3XCI7XG5pbXBvcnQgUHJlbG9hZGVyRGl2IGZyb20gXCIuL3ZpZXcvZGl2L3ByZWxvYWRlclwiO1xuaW1wb3J0IGNyZWF0ZU1ldGhvZHMgZnJvbSBcIi4vY3JlYXRlTWV0aG9kc1wiO1xuXG5pbXBvcnQgeyBzZXRPcmllbnRhdGlvbiB9IGZyb20gXCIuL3N0YXRlXCI7XG5pbXBvcnQgeyBlbGVtZW50RnJvbURPTUVsZW1lbnQgfSBmcm9tIFwiLi91dGlsaXRpZXMvZWxlbWVudFwiO1xuaW1wb3J0IHsgZ2V0T3JpZW50YXRpb24sIG9uT3JpZW50YXRpb25DaGFuZ2UgfSBmcm9tIFwiLi91dGlsaXRpZXMvb3JpZW50YXRpb25cIjtcbmltcG9ydCB7IExPQURJTkdfRElWX1NFTEVDVE9SLCBWSUVXX0RJVl9TRUxFQ1RPUiB9IGZyb20gXCIuL3NlbGVjdG9yc1wiO1xuXG5jb25zdCB7IHJlbmRlclN0eWxlcyB9ID0gd2l0aFN0eWxlO1xuXG5yZW5kZXJTdHlsZXMoKTtcblxuY29uc3Qgdmlld0RPTUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFZJRVdfRElWX1NFTEVDVE9SKSxcbiAgICAgIHNjaGVkdWxlciA9IG51bGwsXG4gICAgICBtb2RlbCA9IG51bGwsXG4gICAgICB2aWV3ID0gZWxlbWVudEZyb21ET01FbGVtZW50KHZpZXdET01FbGVtZW50LCBWaWV3KTsgLy8vXG5cbmNvbnRyb2xsZXIuYXNzaWduTWV0aG9kcyhjcmVhdGVNZXRob2RzLCBzY2hlZHVsZXIsIG1vZGVsLCB2aWV3KTtcblxuY29uc3QgYm9keSA9IG5ldyBCb2R5KCksXG4gICAgICBsb2FkaW5nRGl2ID0gbmV3IEVsZW1lbnQoTE9BRElOR19ESVZfU0VMRUNUT1IpO1xuXG5ib2R5Lm1vdW50KFxuXG4gIDxQcmVsb2FkZXJEaXYvPlxuXG4pO1xuXG5vbk9yaWVudGF0aW9uQ2hhbmdlKChvcmllbnRhdGlvbikgPT4ge1xuICBzZXRPcmllbnRhdGlvbihvcmllbnRhdGlvbik7XG5cbiAgdmlldy51cGRhdGVab29tKCk7XG59KTtcblxuZ2V0T3JpZW50YXRpb24oKG9yaWVudGF0aW9uKSA9PiB7XG4gIHNldE9yaWVudGF0aW9uKG9yaWVudGF0aW9uKTtcblxuICBib2R5Lm1vdW50KHZpZXcpO1xuXG4gIGxvYWRpbmdEaXYuaGlkZSgpO1xufSk7XG4iXSwibmFtZXMiOlsicmVuZGVyU3R5bGVzIiwid2l0aFN0eWxlIiwidmlld0RPTUVsZW1lbnQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJWSUVXX0RJVl9TRUxFQ1RPUiIsInNjaGVkdWxlciIsIm1vZGVsIiwidmlldyIsImVsZW1lbnRGcm9tRE9NRWxlbWVudCIsIlZpZXciLCJjb250cm9sbGVyIiwiYXNzaWduTWV0aG9kcyIsImNyZWF0ZU1ldGhvZHMiLCJib2R5IiwiQm9keSIsImxvYWRpbmdEaXYiLCJFbGVtZW50IiwiTE9BRElOR19ESVZfU0VMRUNUT1IiLCJtb3VudCIsIlByZWxvYWRlckRpdiIsIm9uT3JpZW50YXRpb25DaGFuZ2UiLCJvcmllbnRhdGlvbiIsInNldE9yaWVudGF0aW9uIiwidXBkYXRlWm9vbSIsImdldE9yaWVudGF0aW9uIiwiaGlkZSJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyIsIm1hcHBpbmdzIjoiQUFBQTs7OztRQUVPO29FQUVlOzBCQUVLO29CQUNHOzJEQUViO2dFQUNRO29FQUNDO3FCQUVLO3VCQUNPOzJCQUNjO3lCQUNJOzs7Ozs7QUFFeEQsSUFBTSxBQUFFQSxlQUFpQkMsc0JBQVMsQ0FBMUJEO0FBRVJBO0FBRUEsSUFBTUUsaUJBQWlCQyxTQUFTQyxhQUFhLENBQUNDLDRCQUFpQixHQUN6REMsWUFBWSxNQUNaQyxRQUFRLE1BQ1JDLE9BQU9DLElBQUFBLDhCQUFxQixFQUFDUCxnQkFBZ0JRLGFBQUksR0FBRyxHQUFHO0FBRTdEQyxzQkFBVSxDQUFDQyxhQUFhLENBQUNDLHNCQUFhLEVBQUVQLFdBQVdDLE9BQU9DO0FBRTFELElBQU1NLE9BQU8sSUFBSUMsVUFBSSxJQUNmQyxhQUFhLElBQUlDLGFBQU8sQ0FBQ0MsK0JBQW9CO0FBRW5ESixLQUFLSyxLQUFLLGVBRVIsb0JBQUNDLGtCQUFZO0FBSWZDLElBQUFBLGdDQUFtQixFQUFDLFNBQUNDO0lBQ25CQyxJQUFBQSxxQkFBYyxFQUFDRDtJQUVmZCxLQUFLZ0IsVUFBVTtBQUNqQjtBQUVBQyxJQUFBQSwyQkFBYyxFQUFDLFNBQUNIO0lBQ2RDLElBQUFBLHFCQUFjLEVBQUNEO0lBRWZSLEtBQUtLLEtBQUssQ0FBQ1g7SUFFWFEsV0FBV1UsSUFBSTtBQUNqQiJ9