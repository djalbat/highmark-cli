"use strict";
export var NO_ARGUMENT_GIVEN_MESSAGE = "No argument has been given.";
export var COMMAND_NOT_RECOGNISED_MESSAGE = "The command is not recognised.";
export var INVALID_LINES_PER_PAGE_MESSAGE = "The lines per page must either be a number or left blank for the default of Infinity; which effectively suppresses pagination.";
export var INVALID_CONTENTS_DEPTH_MESSAGE = "The contents depth must be a number between 1 and 4 inclusive; with 1 being primary headings only; 4 down to quaternary headings.";
export var INVALID_CHARACTERS_PER_LINE_MESSAGE = "The characters per line must a number.";
export var FAILED_SERVER_MESSAGE = "Failed to serve.";
export var FAILED_PUBLISH_MESSAGE = "Failed to publish.";
export var FAILED_INITIALISE_MESSAGE = "Failed to create a configuration file because one is already present.";
export var FAILED_SET_OPTIONS_MESSAGE = "Failed to set the options.";
export var SUCCESSFUL_SERVER_MESSAGE = "Served successfully.";
export var SUCCESSFUL_PUBLISH_MESSAGE = "Published successfully.";
export var SUCCESSFUL_INITIALISE_MESSAGE = "The configuration file has been created successfully.";
export var SUCCESSFUL_SET_OPTIONS_MESSAGE = "The options have been set successfully.";
export var UNABLE_TO_COPY_FILE_MESSAGE = "Unable to copy the file.";
export var UNABLE_TO_READ_FILE_MESSAGE = "Unable to read the file.";
export var UNABLE_TO_WRITE_FILE_MESSAGE = "Unable to write the file.";
export var UNABLE_TO_START_SERVER_MESSAGE = "Unable to start the server";
export var UNABLE_TO_READ_DIRECTORY_MESSAGE = "Unable to read the directory.";
export var UNABLE_TO_CREATE_DIRECTORY_MESSAGE = "Unable to create the directory.";
export var UNABLE_TO_PARSE_MARKDOWN_FILE_MESSAGE = "Unable to parse the markdown file.";
export var CONFIGURATION_FILE_DOES_NOT_EXIST_MESSAGE = "There is no configuration file. Run 'highmark initialise' to create one.";
export var UNABLE_TO_CONVERT_MARKDOWN_TO_HTML_MESSAGE = "Unable to convert Markdown to HTML.";

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tZXNzYWdlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0IGNvbnN0IE5PX0FSR1VNRU5UX0dJVkVOX01FU1NBR0UgPSBcIk5vIGFyZ3VtZW50IGhhcyBiZWVuIGdpdmVuLlwiO1xuZXhwb3J0IGNvbnN0IENPTU1BTkRfTk9UX1JFQ09HTklTRURfTUVTU0FHRSA9IFwiVGhlIGNvbW1hbmQgaXMgbm90IHJlY29nbmlzZWQuXCI7XG5leHBvcnQgY29uc3QgSU5WQUxJRF9MSU5FU19QRVJfUEFHRV9NRVNTQUdFID0gXCJUaGUgbGluZXMgcGVyIHBhZ2UgbXVzdCBlaXRoZXIgYmUgYSBudW1iZXIgb3IgbGVmdCBibGFuayBmb3IgdGhlIGRlZmF1bHQgb2YgSW5maW5pdHk7IHdoaWNoIGVmZmVjdGl2ZWx5IHN1cHByZXNzZXMgcGFnaW5hdGlvbi5cIjtcbmV4cG9ydCBjb25zdCBJTlZBTElEX0NPTlRFTlRTX0RFUFRIX01FU1NBR0UgPSBcIlRoZSBjb250ZW50cyBkZXB0aCBtdXN0IGJlIGEgbnVtYmVyIGJldHdlZW4gMSBhbmQgNCBpbmNsdXNpdmU7IHdpdGggMSBiZWluZyBwcmltYXJ5IGhlYWRpbmdzIG9ubHk7IDQgZG93biB0byBxdWF0ZXJuYXJ5IGhlYWRpbmdzLlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfQ0hBUkFDVEVSU19QRVJfTElORV9NRVNTQUdFID0gXCJUaGUgY2hhcmFjdGVycyBwZXIgbGluZSBtdXN0IGEgbnVtYmVyLlwiO1xuZXhwb3J0IGNvbnN0IEZBSUxFRF9TRVJWRVJfTUVTU0FHRSA9IFwiRmFpbGVkIHRvIHNlcnZlLlwiO1xuZXhwb3J0IGNvbnN0IEZBSUxFRF9QVUJMSVNIX01FU1NBR0UgPSBcIkZhaWxlZCB0byBwdWJsaXNoLlwiO1xuZXhwb3J0IGNvbnN0IEZBSUxFRF9JTklUSUFMSVNFX01FU1NBR0UgPSBcIkZhaWxlZCB0byBjcmVhdGUgYSBjb25maWd1cmF0aW9uIGZpbGUgYmVjYXVzZSBvbmUgaXMgYWxyZWFkeSBwcmVzZW50LlwiO1xuZXhwb3J0IGNvbnN0IEZBSUxFRF9TRVRfT1BUSU9OU19NRVNTQUdFID0gXCJGYWlsZWQgdG8gc2V0IHRoZSBvcHRpb25zLlwiO1xuZXhwb3J0IGNvbnN0IFNVQ0NFU1NGVUxfU0VSVkVSX01FU1NBR0UgPSBcIlNlcnZlZCBzdWNjZXNzZnVsbHkuXCI7XG5leHBvcnQgY29uc3QgU1VDQ0VTU0ZVTF9QVUJMSVNIX01FU1NBR0UgPSBcIlB1Ymxpc2hlZCBzdWNjZXNzZnVsbHkuXCI7XG5leHBvcnQgY29uc3QgU1VDQ0VTU0ZVTF9JTklUSUFMSVNFX01FU1NBR0UgPSBcIlRoZSBjb25maWd1cmF0aW9uIGZpbGUgaGFzIGJlZW4gY3JlYXRlZCBzdWNjZXNzZnVsbHkuXCI7XG5leHBvcnQgY29uc3QgU1VDQ0VTU0ZVTF9TRVRfT1BUSU9OU19NRVNTQUdFID0gXCJUaGUgb3B0aW9ucyBoYXZlIGJlZW4gc2V0IHN1Y2Nlc3NmdWxseS5cIjtcbmV4cG9ydCBjb25zdCBVTkFCTEVfVE9fQ09QWV9GSUxFX01FU1NBR0UgPSBcIlVuYWJsZSB0byBjb3B5IHRoZSBmaWxlLlwiO1xuZXhwb3J0IGNvbnN0IFVOQUJMRV9UT19SRUFEX0ZJTEVfTUVTU0FHRSA9IFwiVW5hYmxlIHRvIHJlYWQgdGhlIGZpbGUuXCI7XG5leHBvcnQgY29uc3QgVU5BQkxFX1RPX1dSSVRFX0ZJTEVfTUVTU0FHRSA9IFwiVW5hYmxlIHRvIHdyaXRlIHRoZSBmaWxlLlwiO1xuZXhwb3J0IGNvbnN0IFVOQUJMRV9UT19TVEFSVF9TRVJWRVJfTUVTU0FHRSA9IFwiVW5hYmxlIHRvIHN0YXJ0IHRoZSBzZXJ2ZXJcIjtcbmV4cG9ydCBjb25zdCBVTkFCTEVfVE9fUkVBRF9ESVJFQ1RPUllfTUVTU0FHRSA9IFwiVW5hYmxlIHRvIHJlYWQgdGhlIGRpcmVjdG9yeS5cIjtcbmV4cG9ydCBjb25zdCBVTkFCTEVfVE9fQ1JFQVRFX0RJUkVDVE9SWV9NRVNTQUdFID0gXCJVbmFibGUgdG8gY3JlYXRlIHRoZSBkaXJlY3RvcnkuXCI7XG5leHBvcnQgY29uc3QgVU5BQkxFX1RPX1BBUlNFX01BUktET1dOX0ZJTEVfTUVTU0FHRSA9IFwiVW5hYmxlIHRvIHBhcnNlIHRoZSBtYXJrZG93biBmaWxlLlwiO1xuZXhwb3J0IGNvbnN0IENPTkZJR1VSQVRJT05fRklMRV9ET0VTX05PVF9FWElTVF9NRVNTQUdFID0gXCJUaGVyZSBpcyBubyBjb25maWd1cmF0aW9uIGZpbGUuIFJ1biAnaGlnaG1hcmsgaW5pdGlhbGlzZScgdG8gY3JlYXRlIG9uZS5cIjtcbmV4cG9ydCBjb25zdCBVTkFCTEVfVE9fQ09OVkVSVF9NQVJLRE9XTl9UT19IVE1MX01FU1NBR0UgPSBcIlVuYWJsZSB0byBjb252ZXJ0IE1hcmtkb3duIHRvIEhUTUwuXCI7XG4iXSwibmFtZXMiOlsiTk9fQVJHVU1FTlRfR0lWRU5fTUVTU0FHRSIsIkNPTU1BTkRfTk9UX1JFQ09HTklTRURfTUVTU0FHRSIsIklOVkFMSURfTElORVNfUEVSX1BBR0VfTUVTU0FHRSIsIklOVkFMSURfQ09OVEVOVFNfREVQVEhfTUVTU0FHRSIsIklOVkFMSURfQ0hBUkFDVEVSU19QRVJfTElORV9NRVNTQUdFIiwiRkFJTEVEX1NFUlZFUl9NRVNTQUdFIiwiRkFJTEVEX1BVQkxJU0hfTUVTU0FHRSIsIkZBSUxFRF9JTklUSUFMSVNFX01FU1NBR0UiLCJGQUlMRURfU0VUX09QVElPTlNfTUVTU0FHRSIsIlNVQ0NFU1NGVUxfU0VSVkVSX01FU1NBR0UiLCJTVUNDRVNTRlVMX1BVQkxJU0hfTUVTU0FHRSIsIlNVQ0NFU1NGVUxfSU5JVElBTElTRV9NRVNTQUdFIiwiU1VDQ0VTU0ZVTF9TRVRfT1BUSU9OU19NRVNTQUdFIiwiVU5BQkxFX1RPX0NPUFlfRklMRV9NRVNTQUdFIiwiVU5BQkxFX1RPX1JFQURfRklMRV9NRVNTQUdFIiwiVU5BQkxFX1RPX1dSSVRFX0ZJTEVfTUVTU0FHRSIsIlVOQUJMRV9UT19TVEFSVF9TRVJWRVJfTUVTU0FHRSIsIlVOQUJMRV9UT19SRUFEX0RJUkVDVE9SWV9NRVNTQUdFIiwiVU5BQkxFX1RPX0NSRUFURV9ESVJFQ1RPUllfTUVTU0FHRSIsIlVOQUJMRV9UT19QQVJTRV9NQVJLRE9XTl9GSUxFX01FU1NBR0UiLCJDT05GSUdVUkFUSU9OX0ZJTEVfRE9FU19OT1RfRVhJU1RfTUVTU0FHRSIsIlVOQUJMRV9UT19DT05WRVJUX01BUktET1dOX1RPX0hUTUxfTUVTU0FHRSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxPQUFPLElBQU1BLDRCQUE0Qiw4QkFBOEI7QUFDdkUsT0FBTyxJQUFNQyxpQ0FBaUMsaUNBQWlDO0FBQy9FLE9BQU8sSUFBTUMsaUNBQWlDLGlJQUFpSTtBQUMvSyxPQUFPLElBQU1DLGlDQUFpQyxvSUFBb0k7QUFDbEwsT0FBTyxJQUFNQyxzQ0FBc0MseUNBQXlDO0FBQzVGLE9BQU8sSUFBTUMsd0JBQXdCLG1CQUFtQjtBQUN4RCxPQUFPLElBQU1DLHlCQUF5QixxQkFBcUI7QUFDM0QsT0FBTyxJQUFNQyw0QkFBNEIsd0VBQXdFO0FBQ2pILE9BQU8sSUFBTUMsNkJBQTZCLDZCQUE2QjtBQUN2RSxPQUFPLElBQU1DLDRCQUE0Qix1QkFBdUI7QUFDaEUsT0FBTyxJQUFNQyw2QkFBNkIsMEJBQTBCO0FBQ3BFLE9BQU8sSUFBTUMsZ0NBQWdDLHdEQUF3RDtBQUNyRyxPQUFPLElBQU1DLGlDQUFpQywwQ0FBMEM7QUFDeEYsT0FBTyxJQUFNQyw4QkFBOEIsMkJBQTJCO0FBQ3RFLE9BQU8sSUFBTUMsOEJBQThCLDJCQUEyQjtBQUN0RSxPQUFPLElBQU1DLCtCQUErQiw0QkFBNEI7QUFDeEUsT0FBTyxJQUFNQyxpQ0FBaUMsNkJBQTZCO0FBQzNFLE9BQU8sSUFBTUMsbUNBQW1DLGdDQUFnQztBQUNoRixPQUFPLElBQU1DLHFDQUFxQyxrQ0FBa0M7QUFDcEYsT0FBTyxJQUFNQyx3Q0FBd0MscUNBQXFDO0FBQzFGLE9BQU8sSUFBTUMsNENBQTRDLDJFQUEyRTtBQUNwSSxPQUFPLElBQU1DLDZDQUE2QyxzQ0FBc0MifQ==