"use strict";
import { pathUtilities } from "necessary";
import { readFile } from "./utilities/fileSystem";
import { classNameFromFilePath } from "./utilities/division";
import { nodeFromTokens, tokensFromContent } from "./utilities/markdown";
var concatenatePaths = pathUtilities.concatenatePaths;
export default function importer(filePath, context) {
    var projectDirectoryName = context.projectDirectoryName;
    filePath = concatenatePaths(projectDirectoryName, filePath); ///
    var content = readFile(filePath);
    if (content !== null) {
        var className = classNameFromFilePath(filePath), tokens = tokensFromContent(content), node = nodeFromTokens(tokens), importedNode = node, importedTokens = tokens, importedClassName = className; ///
        if (node !== null) {
            Object.assign(context, {
                importedNode: importedNode,
                importedTokens: importedTokens,
                importedClassName: importedClassName
            });
        }
    }
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbXBvcnRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcGF0aFV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgcmVhZEZpbGUgfSBmcm9tIFwiLi91dGlsaXRpZXMvZmlsZVN5c3RlbVwiO1xuaW1wb3J0IHsgY2xhc3NOYW1lRnJvbUZpbGVQYXRoIH0gZnJvbSBcIi4vdXRpbGl0aWVzL2RpdmlzaW9uXCI7XG5pbXBvcnQgeyBub2RlRnJvbVRva2VucywgdG9rZW5zRnJvbUNvbnRlbnQgfSBmcm9tIFwiLi91dGlsaXRpZXMvbWFya2Rvd25cIjtcblxuY29uc3QgeyBjb25jYXRlbmF0ZVBhdGhzIH0gPSBwYXRoVXRpbGl0aWVzO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbXBvcnRlcihmaWxlUGF0aCwgY29udGV4dCkge1xuICBjb25zdCB7IHByb2plY3REaXJlY3RvcnlOYW1lIH0gPSBjb250ZXh0O1xuXG4gIGZpbGVQYXRoID0gY29uY2F0ZW5hdGVQYXRocyhwcm9qZWN0RGlyZWN0b3J5TmFtZSwgZmlsZVBhdGgpOyAgLy8vXG5cbiAgY29uc3QgY29udGVudCA9IHJlYWRGaWxlKGZpbGVQYXRoKTtcblxuICBpZiAoY29udGVudCAhPT0gbnVsbCkge1xuICAgIGNvbnN0IGNsYXNzTmFtZSA9IGNsYXNzTmFtZUZyb21GaWxlUGF0aChmaWxlUGF0aCksXG4gICAgICAgICAgdG9rZW5zID0gdG9rZW5zRnJvbUNvbnRlbnQoY29udGVudCksXG4gICAgICAgICAgbm9kZSA9IG5vZGVGcm9tVG9rZW5zKHRva2VucyksXG4gICAgICAgICAgaW1wb3J0ZWROb2RlID0gbm9kZSwgIC8vL1xuICAgICAgICAgIGltcG9ydGVkVG9rZW5zID0gdG9rZW5zLCAgLy8vXG4gICAgICAgICAgaW1wb3J0ZWRDbGFzc05hbWUgPSBjbGFzc05hbWU7ICAvLy9cblxuICAgIGlmIChub2RlICE9PSBudWxsKSB7XG4gICAgICBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICAgICAgaW1wb3J0ZWROb2RlLFxuICAgICAgICBpbXBvcnRlZFRva2VucyxcbiAgICAgICAgaW1wb3J0ZWRDbGFzc05hbWVcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbInBhdGhVdGlsaXRpZXMiLCJyZWFkRmlsZSIsImNsYXNzTmFtZUZyb21GaWxlUGF0aCIsIm5vZGVGcm9tVG9rZW5zIiwidG9rZW5zRnJvbUNvbnRlbnQiLCJjb25jYXRlbmF0ZVBhdGhzIiwiaW1wb3J0ZXIiLCJmaWxlUGF0aCIsImNvbnRleHQiLCJwcm9qZWN0RGlyZWN0b3J5TmFtZSIsImNvbnRlbnQiLCJjbGFzc05hbWUiLCJ0b2tlbnMiLCJub2RlIiwiaW1wb3J0ZWROb2RlIiwiaW1wb3J0ZWRUb2tlbnMiLCJpbXBvcnRlZENsYXNzTmFtZSIsIk9iamVjdCIsImFzc2lnbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxTQUFTQSxhQUFhLFFBQVEsWUFBWTtBQUUxQyxTQUFTQyxRQUFRLFFBQVEseUJBQXlCO0FBQ2xELFNBQVNDLHFCQUFxQixRQUFRLHVCQUF1QjtBQUM3RCxTQUFTQyxjQUFjLEVBQUVDLGlCQUFpQixRQUFRLHVCQUF1QjtBQUV6RSxJQUFNLEFBQUVDLG1CQUFxQkwsY0FBckJLO0FBRVIsZUFBZSxTQUFTQyxTQUFTQyxRQUFRLEVBQUVDLE9BQU87SUFDaEQsSUFBTSxBQUFFQyx1QkFBeUJELFFBQXpCQztJQUVSRixXQUFXRixpQkFBaUJJLHNCQUFzQkYsV0FBWSxHQUFHO0lBRWpFLElBQU1HLFVBQVVULFNBQVNNO0lBRXpCLElBQUlHLFlBQVksTUFBTTtRQUNwQixJQUFNQyxZQUFZVCxzQkFBc0JLLFdBQ2xDSyxTQUFTUixrQkFBa0JNLFVBQzNCRyxPQUFPVixlQUFlUyxTQUN0QkUsZUFBZUQsTUFDZkUsaUJBQWlCSCxRQUNqQkksb0JBQW9CTCxXQUFZLEdBQUc7UUFFekMsSUFBSUUsU0FBUyxNQUFNO1lBQ2pCSSxPQUFPQyxNQUFNLENBQUNWLFNBQVM7Z0JBQ3JCTSxjQUFBQTtnQkFDQUMsZ0JBQUFBO2dCQUNBQyxtQkFBQUE7WUFDRjtRQUNGO0lBQ0Y7QUFDRiJ9