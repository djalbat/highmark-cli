"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
require("juxtapose");
var _easywithstyle = /*#__PURE__*/ _interop_require_default(require("easy-with-style"));
var _sufficient = require("sufficient");
var _easy = require("easy");
var _view = /*#__PURE__*/ _interop_require_default(require("./view"));
var _preloader = /*#__PURE__*/ _interop_require_default(require("./view/div/preloader"));
var _createMethods = /*#__PURE__*/ _interop_require_default(require("./createMethods"));
var _state = require("./state");
var _element = require("./utilities/element");
var _responsive = require("./utilities/responsive");
var _selectors = require("./selectors");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var renderStyles = _easywithstyle.default.renderStyles;
renderStyles();
var viewDOMElement = document.querySelector(_selectors.VIEW_DIV_SELECTOR), scheduler = null, model = null, view = (0, _element.elementFromDOMElement)(viewDOMElement, _view.default); ///
_sufficient.controller.assignMethods(_createMethods.default, scheduler, model, view);
var body = new _easy.Body(), loadingDiv = new _easy.Element(_selectors.LOADING_DIV_SELECTOR);
body.mount(/*#__PURE__*/ React.createElement(_preloader.default, null));
(0, _responsive.onOrientationChange)(function(orientation) {
    (0, _state.setOrientation)(orientation);
    view.updateZoom();
});
(0, _responsive.getOrientation)(function(orientation) {
    (0, _state.setOrientation)(orientation);
    body.mount(view);
    loadingDiv.hide();
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBcImp1eHRhcG9zZVwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBjb250cm9sbGVyIH0gZnJvbSBcInN1ZmZpY2llbnRcIjtcbmltcG9ydCB7IEJvZHksIEVsZW1lbnQgfSBmcm9tIFwiZWFzeVwiO1xuXG5pbXBvcnQgVmlldyBmcm9tIFwiLi92aWV3XCI7XG5pbXBvcnQgUHJlbG9hZGVyRGl2IGZyb20gXCIuL3ZpZXcvZGl2L3ByZWxvYWRlclwiO1xuaW1wb3J0IGNyZWF0ZU1ldGhvZHMgZnJvbSBcIi4vY3JlYXRlTWV0aG9kc1wiO1xuXG5pbXBvcnQgeyBzZXRPcmllbnRhdGlvbiB9IGZyb20gXCIuL3N0YXRlXCI7XG5pbXBvcnQgeyBlbGVtZW50RnJvbURPTUVsZW1lbnQgfSBmcm9tIFwiLi91dGlsaXRpZXMvZWxlbWVudFwiO1xuaW1wb3J0IHsgZ2V0T3JpZW50YXRpb24sIG9uT3JpZW50YXRpb25DaGFuZ2UgfSBmcm9tIFwiLi91dGlsaXRpZXMvcmVzcG9uc2l2ZVwiO1xuaW1wb3J0IHsgTE9BRElOR19ESVZfU0VMRUNUT1IsIFZJRVdfRElWX1NFTEVDVE9SIH0gZnJvbSBcIi4vc2VsZWN0b3JzXCI7XG5cbmNvbnN0IHsgcmVuZGVyU3R5bGVzIH0gPSB3aXRoU3R5bGU7XG5cbnJlbmRlclN0eWxlcygpO1xuXG5jb25zdCB2aWV3RE9NRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoVklFV19ESVZfU0VMRUNUT1IpLFxuICAgICAgc2NoZWR1bGVyID0gbnVsbCxcbiAgICAgIG1vZGVsID0gbnVsbCxcbiAgICAgIHZpZXcgPSBlbGVtZW50RnJvbURPTUVsZW1lbnQodmlld0RPTUVsZW1lbnQsIFZpZXcpOyAvLy9cblxuY29udHJvbGxlci5hc3NpZ25NZXRob2RzKGNyZWF0ZU1ldGhvZHMsIHNjaGVkdWxlciwgbW9kZWwsIHZpZXcpO1xuXG5jb25zdCBib2R5ID0gbmV3IEJvZHkoKSxcbiAgICAgIGxvYWRpbmdEaXYgPSBuZXcgRWxlbWVudChMT0FESU5HX0RJVl9TRUxFQ1RPUik7XG5cbmJvZHkubW91bnQoXG5cbiAgPFByZWxvYWRlckRpdi8+XG5cbik7XG5cbm9uT3JpZW50YXRpb25DaGFuZ2UoKG9yaWVudGF0aW9uKSA9PiB7XG4gIHNldE9yaWVudGF0aW9uKG9yaWVudGF0aW9uKTtcblxuICB2aWV3LnVwZGF0ZVpvb20oKTtcbn0pO1xuXG5nZXRPcmllbnRhdGlvbigob3JpZW50YXRpb24pID0+IHtcbiAgc2V0T3JpZW50YXRpb24ob3JpZW50YXRpb24pO1xuXG4gIGJvZHkubW91bnQodmlldyk7XG5cbiAgbG9hZGluZ0Rpdi5oaWRlKCk7XG59KTtcbiJdLCJuYW1lcyI6WyJyZW5kZXJTdHlsZXMiLCJ3aXRoU3R5bGUiLCJ2aWV3RE9NRWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIlZJRVdfRElWX1NFTEVDVE9SIiwic2NoZWR1bGVyIiwibW9kZWwiLCJ2aWV3IiwiZWxlbWVudEZyb21ET01FbGVtZW50IiwiVmlldyIsImNvbnRyb2xsZXIiLCJhc3NpZ25NZXRob2RzIiwiY3JlYXRlTWV0aG9kcyIsImJvZHkiLCJCb2R5IiwibG9hZGluZ0RpdiIsIkVsZW1lbnQiLCJMT0FESU5HX0RJVl9TRUxFQ1RPUiIsIm1vdW50IiwiUHJlbG9hZGVyRGl2Iiwib25PcmllbnRhdGlvbkNoYW5nZSIsIm9yaWVudGF0aW9uIiwic2V0T3JpZW50YXRpb24iLCJ1cGRhdGVab29tIiwiZ2V0T3JpZW50YXRpb24iLCJoaWRlIl0sInJhbmdlTWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7IiwibWFwcGluZ3MiOiJBQUFBOzs7O1FBRU87b0VBRWU7MEJBRUs7b0JBQ0c7MkRBRWI7Z0VBQ1E7b0VBQ0M7cUJBRUs7dUJBQ087MEJBQ2M7eUJBQ0k7Ozs7OztBQUV4RCxJQUFNLEFBQUVBLGVBQWlCQyxzQkFBUyxDQUExQkQ7QUFFUkE7QUFFQSxJQUFNRSxpQkFBaUJDLFNBQVNDLGFBQWEsQ0FBQ0MsNEJBQWlCLEdBQ3pEQyxZQUFZLE1BQ1pDLFFBQVEsTUFDUkMsT0FBT0MsSUFBQUEsOEJBQXFCLEVBQUNQLGdCQUFnQlEsYUFBSSxHQUFHLEdBQUc7QUFFN0RDLHNCQUFVLENBQUNDLGFBQWEsQ0FBQ0Msc0JBQWEsRUFBRVAsV0FBV0MsT0FBT0M7QUFFMUQsSUFBTU0sT0FBTyxJQUFJQyxVQUFJLElBQ2ZDLGFBQWEsSUFBSUMsYUFBTyxDQUFDQywrQkFBb0I7QUFFbkRKLEtBQUtLLEtBQUssZUFFUixvQkFBQ0Msa0JBQVk7QUFJZkMsSUFBQUEsK0JBQW1CLEVBQUMsU0FBQ0M7SUFDbkJDLElBQUFBLHFCQUFjLEVBQUNEO0lBRWZkLEtBQUtnQixVQUFVO0FBQ2pCO0FBRUFDLElBQUFBLDBCQUFjLEVBQUMsU0FBQ0g7SUFDZEMsSUFBQUEscUJBQWMsRUFBQ0Q7SUFFZlIsS0FBS0ssS0FBSyxDQUFDWDtJQUVYUSxXQUFXVSxJQUFJO0FBQ2pCIn0=